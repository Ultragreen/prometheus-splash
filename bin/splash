#!/usr/bin/env ruby -W:no-deprecated

require 'prometheus/client'
require 'prometheus/client/push'

require 'thor'
require 'yaml'

require 'splash/constants'
require 'splash/helpers'
require 'splash/config'

require 'splash/command'
require 'splash/logs'
require 'splash/controller'

#inhibit warning : due to prometheus-client call to URI.encode warning
$-w = nil

include Splash::Helpers

module CLISplash



  class Commands < Thor

    option :ack, :type => :boolean
    desc "wrap NAME", "wrapping for command or ack result"
    def wrap(name)
      command =  Splash::CommandWrapper::new(name)
      command.ack if options[:ack]
      command.call_and_notify
    end
  end


  class CLIController < Thor
    include Splash::LogsMonitor::DaemonController

    option :foreground, :type => :boolean
    desc "start", "Starting Logs Monitor Daemon"
    def start
      startdaemon
    end

    desc "stop", "Stopping Logs Monitor Daemon"
    def stop
      stopdaemon
    end


  end

  class Config < Thor
    include Splash::Config
    desc "setup", "Setup installation fo Splash"
    def setup
        setupsplash
    end

    desc "sanitycheck", "Verify installation fo Splash"
    def sanitycheck
      checkconfig
    end

    desc "version", "display current Splash version"
    def version
        config = get_config
        puts "Splash version : #{config.version}, Author : #{config.author}"
    end


  end


  class Logs < Thor

    desc "analyse", "analyze logs in config"
    def analyse
      result = Splash::LogScanner::new
      result.analyse
      p result.output
    end

    desc "monitor", "monitor logs in config"
    def monitor
      result = Splash::LogScanner::new
      result.analyse
      result.notify
    end


  end
end

class CLI < Thor
  include CLISplash
  desc "commands SUBCOMMAND ...ARGS", "Managing commands/batchs supervision"
  subcommand "commands", Commands
  desc "logs SUBCOMMAND ...ARGS", "Managing Files/Logs supervision"
  subcommand "logs", Logs
  desc "daemon SUBCOMMAND ...ARGS", "Logs monitor daemon contoller"
  subcommand "daemon", CLIController
  desc "config SUBCOMMAND ...ARGS", "config tools for Splash"
  subcommand "config", Config
end








CLI.start(ARGV)
